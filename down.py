import tkinter as tk
from tkinter import filedialog
from openpyxl import load_workbook  # Импорт библиотеки для работы с Excel
from docx import Document  # Импорт библиотеки для работы с Word
from datetime import datetime, timedelta

# состав 737
boeing = {
    1: "1.Носовое колесо весом 28 кг. и габаритами 700х200.",
    2: "1.Основное колесо весом 150 кг. и габаритами 1140х419.",
    3: "1.Основное колесо весом 150 кг. и габаритами 1140х419.\n2.Носовое колесо весом 28 кг. и габаритами 700х200.",
    4: "1.Основное колесо весом 150 кг. и габаритами 1140х419.\n2.Носовое колесо весом 28 кг. и габаритами 700х200.\n3.Металлический ящик с маслом весом 15 кг. и габаритами 500х350х300.",
    5: "1.Основное колесо весом 150 кг. и габаритами 1140х419.\n2.Носовое колесо весом 28 кг. и габаритами 700х200.\n3.Металлический ящик с маслом весом 15 кг. и габаритами 500х350х300.\n4.Гидродомкрат весом 95 кг. и габаритами 1000х200х250.\n5.Алюминиевый ящик с инструментом весом 70 кг. и габаритами 1400х450х250.,\n6.Металлический ящик с инструментом весом 15 кг. и габаритами 500х350х300. ",
    6: "1.Основное колесо весом 150 кг. и габаритами 1140х419.\n2.Носовое колесо весом 28 кг. и габаритами 700х200.\n3.Металлический ящик с маслом весом 15 кг. и габаритами 500х350х300.\n4.Гидродомкрат весом 95 кг. и габаритами 1000х200х250.\n5.Алюминиевый ящик с инструментом весом 70 кг. и габаритами 1400х450х250.,\n6.Металлический ящик с инструментом весом 15 кг. и габаритами 500х350х300.\n7.Металлический ящик с маслом весом 15 кг. и габаритами 500х350х300.",
    7: "1.Основное колесо весом 150 кг. и габаритами 1140х419.\n2.Носовое колесо весом 28 кг. и габаритами 700х200.\n3.Металлический ящик с маслом весом 15 кг. и габаритами 500х350х300.\n4.Гидродомкрат весом 95 кг. и габаритами 1000х200х250.\n5.Алюминиевый ящик с инструментом весом 70 кг. и габаритами 1400х450х250.,\n6.Металлический ящик с инструментом весом 15 кг. и габаритами 500х350х300.\n7.Металлический ящик с маслом весом 25 кг. и габаритами 500х350х300.",
    8: "1.Основное колесо весом 190 кг. и габаритами 1250х435.\n2.Носовое колесо весом 50 кг. и габаритами 740х230.\n3.Металлический ящик с маслом весом 15 кг. и габаритами 500х350х300.\n4.Гидродомкрат весом 95 кг. и габаритами 1000х200х250.\n4.Алюминиевый ящик с инструментом весом 70 кг. и габаритами 1400х450х250.\n5.Металлический ящик с инструментом весом 15 кг. и габаритами 500х350х300.\n6.Металлический ящик с маслом весом 24 кг. и габаритами 500х350х300."
}

# состав 320
airbus_320 = {
    1: "1.Носовое колесо весом 50 кг. и габаритами 740х230.",
    2: "1.Основное колесо весом 150 кг. и габаритами 1240х430.",
    3: "1.Основное колесо весом 150 кг. и габаритами 1240х430.\n2.Носовое колесо весом 50 кг. и габаритами 740х230.",
    4: "1.Основное колесо весом 150 кг. и габаритами 1240х430.\n2.Носовое колесо весом 50 кг. и габаритами 740х230.\n3.Металлический ящик с маслом весом 15 кг. и габаритами 500х350х300.",
    5: "1.Основное колесо весом 150 кг. и габаритами 1240х430.\n2.Носовое колесо весом 50 кг. и габаритами 740х230.\n3.Металлический ящик с маслом весом 15 кг. и габаритами 500х350х300.\n3.Гидродомкрат весом 95 кг. и габаритами 1000х200х250.\n4.Алюминиевый ящик с инструментом весом 70 кг. и габаритами 1400х450х250.,\n5.Металлический ящик с инструментом весом 15 кг. и габаритами 500х350х300.",
    6: "1.Основное колесо весом 150 кг. и габаритами 1240х430.\n2.Носовое колесо весом 50 кг. и габаритами 740х230.\n3.Металлический ящик с маслом весом 15 кг. и габаритами 500х350х300.\n3.Гидродомкрат весом 95 кг. и габаритами 1000х200х250.\n4.Алюминиевый ящик с инструментом весом 70 кг. и габаритами 1400х450х250.,\n5.Металлический ящик с инструментом весом 15 кг. и габаритами 500х350х300.\n6.Металлический ящик с маслом весом 15 кг. и габаритами 500х350х300.",
    7: "1.Основное колесо весом 150 кг. и габаритами 1240х430.\n2.Носовое колесо весом 50 кг. и габаритами 740х230..\n3.Металлический ящик с маслом весом 15 кг. и габаритами 500х350х300.\n3.Гидродомкрат весом 95 кг. и габаритами 1000х200х250.\n4.Алюминиевый ящик с инструментом весом 70 кг. и габаритами 1400х450х250.,\n5.Металлический ящик с инструментом весом 15 кг. и габаритами 500х350х300.\n6.Металлический ящик с маслом весом 25 кг. и габаритами 500х350х300.",
    8: "1.Основное колесо весом 190 кг. и габаритами 1250х435.\n2.Носовое колесо весом 50 кг. и габаритами 740х230.\n3.Металлический ящик с маслом весом 15 кг. и габаритами 500х350х300.\n4.Гидродомкрат весом 95 кг. и габаритами 1000х200х250.\n4.Алюминиевый ящик с инструментом весом 70 кг. и габаритами 1400х450х250.\n5.Металлический ящик с инструментом весом 15 кг. и габаритами 500х350х300.\n6.Металлический ящик с маслом весом 24 кг. и габаритами 500х350х300."
}

# состав 321
airbus_321 = {
    1: "1.Носовое колесо весом 50 кг. и габаритами 740х230.",
    2: "1.Основное колесо весом 190 кг. и габаритами 1250х435.",
    3: "1.Основное колесо весом 190 кг. и габаритами 1250х435.\n2.Носовое колесо весом 50 кг. и габаритами 740х230.",
    4: "1.Основное колесо весом 190 кг. и габаритами 1250х435.\n2.Носовое колесо весом 50 кг. и габаритами 740х230.\n3.Металлический ящик с маслом весом 15 кг. и габаритами 500х350х300.",
    5: "1.Основное колесо весом 190 кг. и габаритами 1250х435.\n2.Носовое колесо весом 50 кг. и габаритами 740х230.\n3.Металлический ящик с маслом весом 15 кг. и габаритами 500х350х300.\n4.Гидродомкрат весом 95 кг. и габаритами 1000х200х250.\n4.Алюминиевый ящик с инструментом весом 70 кг. и габаритами 1400х450х250.,\n5.Металлический ящик с инструментом весом 15 кг. и габаритами 500х350х300.",
    6: "1.Основное колесо весом 190 кг. и габаритами 1250х435.\n2.Носовое колесо весом 50 кг. и габаритами 740х230.\n3.Металлический ящик с маслом весом 15 кг. и габаритами 500х350х300.\n4.Гидродомкрат весом 95 кг. и габаритами 1000х200х250.\n4.Алюминиевый ящик с инструментом весом 70 кг. и габаритами 1400х450х250.\n5.Металлический ящик с инструментом весом 15 кг. и габаритами 500х350х300.\n6.Металлический ящик с маслом весом 15 кг. и габаритами 500х350х300.",
    7: "1.Основное колесо весом 190 кг. и габаритами 1250х435.\n2.Носовое колесо весом 50 кг. и габаритами 740х230.\n3.Металлический ящик с маслом весом 15 кг. и габаритами 500х350х300.\n4.Гидродомкрат весом 95 кг. и габаритами 1000х200х250.\n4.Алюминиевый ящик с инструментом весом 70 кг. и габаритами 1400х450х250.\n5.Металлический ящик с инструментом весом 15 кг. и габаритами 500х350х300.\n6.Металлический ящик с маслом весом 25 кг. и габаритами 500х350х300.",
    8: "1.Основное колесо весом 190 кг. и габаритами 1250х435.\n2.Носовое колесо весом 50 кг. и габаритами 740х230.\n3.Металлический ящик с маслом весом 15 кг. и габаритами 500х350х300.\n4.Гидродомкрат весом 95 кг. и габаритами 1000х200х250.\n4.Алюминиевый ящик с инструментом весом 70 кг. и габаритами 1400х450х250.\n5.Металлический ящик с инструментом весом 15 кг. и габаритами 500х350х300.\n6.Металлический ящик с маслом весом 24 кг. и габаритами 500х350х300."
}

# Корректировка даты
def add_days_to_current_date(days_to_add):
    # Получаем текущую дату
    current_date = datetime.now()
    # Добавляем указанное количество дней
    new_date = current_date + timedelta(days=days_to_add)
    # Возвращаем новую дату в формате "день месяц год"
    return new_date.strftime("%d.%m.%Y")

days_to_add = 1  # Добавляем дней к текущей дате
date_plus = add_days_to_current_date(days_to_add)
print(f"Текущая дата + {days_to_add} дней: {date_plus}")

# Открытие Excel файла
def open_file():
    file_path = filedialog.askopenfilename(filetypes=[("Excel files", "*.xlsx *.xls")])
    if file_path:
        try:
            # Загрузка Excel-файла
            workbook = load_workbook(filename=file_path)
            sheet = workbook.active  # Выбор активного листа
            # Преобразование данных в вложенный список
            data = []
            for row in sheet.iter_rows(values_only=True):
                data.append(list(row))
            # Возвращаем данные
            return data
        except Exception as e:
            print(f"Ошибка: {e}")
            return None
    return None


def correct_air(ac):
    result = ""
    ac_up = ac.upper().strip()
    boeing737 = ["73H", "737", "B737", "В737", 737]
    airbus321 = ["32Q", "321", "A321", "А321" , 321]
    airbus320 = ["320", "A320", "А320", 320]
    if ac_up in boeing737:
        result = "B737"
    elif ac_up in airbus321:
        result = "A321"
    elif ac_up in airbus320:
        result = "A320"
    return result



def correct_long(line):
    result = ""
    if line == 1:
        result = "место"
    if 1 < line < 4:
        result = "места"
    if 4 < line >= 5:
        result = "мест"
    return result




def correct_flyKit(fkt):
    result = fkt.lower().strip()
    ans = result.split()
    ans_after = "".join(ans)
    if ans_after == "осн-кол" :
        return 2
    if ans_after == "та":
        return 3
    if ans_after == "та+10m+5h" or ans_after == "та+10+5":
        return 4
    if ans_after == "та+ди+я":
        return 5
    if ans_after == "та+ди+я+10m+5h" or ans_after == "та+ди+я+10+5":
        return 6
    if ans_after == "та+ди+я+20m+5h" or ans_after == "та+ди+я+20+5":
        return 7
    if ans_after == "та+ди+я+19m+5h" or ans_after == "та+ди+я+19+5":
        return 8


# Возврат комплектации тех-аптечки
def structure_FKT(lst):
    messages = []  # Список для хранения всех сообщений
    messages.append("Уважаемые коллеги!")
    for i in range(len(lst)):
        flight, type_Air, point, fly_kit, time, text, long  = lst[i][0], str(lst[i][1]), lst[i][3], lst[i][5].lower(), lst[i][4], "", []
        formatted_time = time.strftime("%H:%M")
        formatted_type_Air = correct_air(type_Air)

        if formatted_type_Air == "B737":
            if correct_flyKit(fly_kit) in boeing:
                text = boeing[correct_flyKit(fly_kit)]
                long = [i for i in text.split("\n")]
        if formatted_type_Air == "A320":
            if correct_flyKit(fly_kit) in airbus_320:
                text = boeing[correct_flyKit(fly_kit)]
                long = [i for i in text.split("\n")]
        if formatted_type_Air == "A321":
            if correct_flyKit(fly_kit) in airbus_321:
                text = boeing[correct_flyKit(fly_kit)]
                long = [i for i in text.split("\n")]

        message = f"{date_plus}  {flight}  {point}-SVO, прилет {formatted_time} (МСК), BC ({formatted_type_Air}), необходимо выгрузить {len(long)} {correct_long(len(long))} технической аптечки: \n{text}"
        messag_down = f"Персонал ДТО ВС доставит телегу с контейнером для разгрузки тех-аптечки к границе зоны обслуживания ВС."
        messages.append(message)  # Добавляем сообщение в список
        messages.append(messag_down)

    return messages  # Возвращаем список сообщений




# сохранение в Word
def save_to_word(messages):
    # Запрос пути для сохранения файла
    save_path = filedialog.asksaveasfilename(
        defaultextension=".docx",
        filetypes=[("Word files", "*.docx")],
        title="Сохранить файл как"
    )
    if save_path:
        doc = Document()  # Создаем новый документ Word
        for msg in messages:
            doc.add_paragraph(msg)  # Добавляем каждое сообщение как новый абзац
        doc.save(save_path)  # Сохраняем документ
        print(f"Файл успешно сохранён в: {save_path}")
    else:
        print("Сохранение отменено.")


def process_file():
    data = open_file()  # Открываем файл и получаем данные
    if data:
        result = structure_FKT(data)  # Обрабатываем данные
        save_to_word(result)  # Сохраняем результат в Word-файл


# Создание графического интерфейса
root = tk.Tk()
root.title("Разгрузка тех-аптечек")

# Приветствие
greeting_label = tk.Label(root, text=f"Добро пожаловать в программу для создания письма на прилет для Москва Карго!\n Программа понимает:\nнос-кол\nосн-кол\nта\nта+10+5\nта+ди+я\nта+ди+я+10+5\nта+ди+я+19+5", font=("Arial", 12))
greeting_label.pack(pady=10)

# Кнопка для выбора файла и обработки данных
open_button = tk.Button(root, text="Выберите Excel файл", command=process_file)
open_button.pack(pady=10)

# Запуск основного цикла
root.mainloop()